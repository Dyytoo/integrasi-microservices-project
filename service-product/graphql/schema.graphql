"""
A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`.
"""
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"""
A decimal string.
"""
scalar Decimal @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Decimal")

"""
Represents a product in the catalog.
"""
type Product {
    """Unique primary key."""
    id: ID!

    """Name of the product."""
    name: String!

    """Description of the product."""
    description: String

    """Price of the product."""
    price: Decimal!

    """Available stock quantity."""
    stock: Int!

    """When the product was created."""
    created_at: DateTime!

    """When the product was last updated."""
    updated_at: DateTime!
}

"""
Indicates what fields are available at the top level of a query operation.
"""
type Query {
    """Find a single product by ID."""
    product(id: ID @eq): Product @find

    """List multiple products."""
    products(
        "Filter by name (case-insensitive)."
        name: String @where(operator: "like")
    ): [Product!]! @paginate(defaultCount: 10)
}

"""
Mutations for products.
"""
type Mutation {
    """Create a new product."""
    createProduct(
        name: String! @rules(apply: ["required", "string", "max:255"])
        description: String @rules(apply: ["nullable", "string"])
        price: Decimal! @rules(apply: ["required", "numeric", "min:0"])
        stock: Int! @rules(apply: ["required", "integer", "min:0"])
    ): Product @create(model: "App\\Models\\Product")

    """Update an existing product."""
    updateProduct(
        id: ID! @rules(apply: ["required", "exists:products,id"])
        name: String @rules(apply: ["sometimes", "required", "string", "max:255"])
        description: String @rules(apply: ["sometimes", "nullable", "string"])
        price: Decimal @rules(apply: ["sometimes", "required", "numeric", "min:0"])
        stock: Int @rules(apply: ["sometimes", "required", "integer", "min:0"])
    ): Product @update(model: "App\\Models\\Product")

    """Delete a product."""
    deleteProduct(id: ID! @rules(apply: ["required", "exists:products,id"])): Product @delete(model: "App\\Models\\Product")
}

# The default User type is not needed here
# type User { ... }

